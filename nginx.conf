worker_processes  1;
daemon off;
user root;  
events {
    worker_connections  1024;
}
http {
    include       mime.types;
    default_type  application/octet-stream;
    gzip  on;
    rewrite_log on;
    real_ip_header     X-Forwarded-For;
    server {
       listen 80;
       charset utf-8;
       default_type text/html;
       location / {
            root /opt/demoapps/;
            index index.html index.htm index;
            # 不同规则的重写（比如固定的几个），注意last 与break 的区别
            rewrite ^(.*?)(.html)?\/(\d+)$ /demo$3$1.html last;
            # rewrite ^(.*?)(.html)?\/2$ /demo2$1 last;
       }
       error_page 404 /404.html;
       # 不存在默认界面
       location = /404.html {
            root /opt/demoapps/;
       }
       location =/favicon.ico {
            root /opt/demoapps/;
       }
       # 可以基于openresty 的处理，此处可以基于web 框架处理比如 lua-resty-route 以及lua-resty-template
       location ~* ^/demo {
           internal;
           proxy_set_header Host $http_host;
           proxy_set_header X-Forwarded-For $remote_addr;
           client_body_buffer_size 10M;
           client_max_body_size 10G;
           proxy_buffers 1024 4k;
           default_type text/html;
           access_by_lua_block {
                local m, err = ngx.re.match(ngx.var.uri,[[^(\/demo)(\d+)$]])
                if m then
                     ngx.exit(ngx.HTTP_FORBIDDEN)
                end
           }
           index index.html index.htm index;
           proxy_read_timeout 300;
           proxy_next_upstream error timeout http_404;
           proxy_pass http://minio:9000;
       }
    }
    server {
       listen 8080;
       charset utf-8;
       default_type text/html;
       location / {
            root /opt/demoapps/;
            index index.html index.htm index;
            # 不同规则的重写（比如固定的几个），注意last 与break 的区别
            rewrite ^(.*?)(.html)?\/(\d+)$ /demo$3$1.html last;
            # rewrite ^(.*?)(.html)?\/2$ /demo2$1 last;
       }
       error_page 404 /404.html;
       # 不存在默认界面
       location = /404.html {
            root /opt/demoapps/;
       }
       location =/favicon.ico {
            root /opt/demoapps/;
       }
       # 可以基于openresty 的处理，此处可以基于web 框架处理比如 lua-resty-route 以及lua-resty-template
       location ~* ^/demo {
           proxy_set_header Host $http_host;
           proxy_set_header X-Forwarded-For $remote_addr;
           client_body_buffer_size 10M;
           client_max_body_size 10G;
           proxy_buffers 1024 4k;
           default_type text/html;
           access_by_lua_block {
                local m, err = ngx.re.match(ngx.var.uri,[[^(\/demo)(\d+)(\/?)$]])
                if m then
                     ngx.exit(ngx.HTTP_FORBIDDEN)
                end
           }
           index index.html index.htm index;
           proxy_read_timeout 300;
           proxy_next_upstream error timeout http_404;
           proxy_pass http://minio:9000;
       }
    }
}